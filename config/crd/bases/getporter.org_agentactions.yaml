---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: agentactions.getporter.org
spec:
  group: getporter.org
  names:
    kind: AgentAction
    listKind: AgentActionList
    plural: agentactions
    singular: agentaction
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: AgentAction is the Schema for the agentactions API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: AgentActionSpec defines the desired state of AgentAction
            properties:
              agentConfig:
                $ref: '#/definitions/k8s.io~1api~1core~1v1~0LocalObjectReference'
                description: AgentConfig is the name of an AgentConfig to use instead
                  of the AgentConfig defined at the namespace or system level.
              args:
                description: Args to pass to the Porter Agent job. This should be
                  the porter command that you want to run.
                items:
                  type: string
                type: array
              command:
                description: Command to run inside the Porter Agent job. Defaults
                  to running the agent.
                items:
                  type: string
                type: array
              env:
                description: Env variables to set on the Porter Agent job.
                items:
                  $ref: '#/definitions/k8s.io~1api~1core~1v1~0EnvVar'
                type: array
              envFrom:
                description: EnvFrom allows setting environment variables on the Porter
                  Agent job, using secrets or config maps as the source.
                items:
                  $ref: '#/definitions/k8s.io~1api~1core~1v1~0EnvFromSource'
                type: array
              files:
                additionalProperties:
                  format: byte
                  type: string
                description: Files that should be present in the working directory
                  where the command is run.
                type: object
              volumeMounts:
                description: VolumeMounts that should be defined on the Porter Agent
                  job.
                items:
                  $ref: '#/definitions/k8s.io~1api~1core~1v1~0VolumeMount'
                type: array
              volumes:
                description: Volumes that should be defined on the Porter Agent job.
                items:
                  $ref: '#/definitions/k8s.io~1api~1core~1v1~0Volume'
                type: array
            type: object
          status:
            description: AgentActionStatus defines the observed state of AgentAction
            properties:
              conditions:
                description: |-
                  Conditions store a list of states that have been reached.
                  Each condition refers to the status of the Job
                  Possible conditions are: Scheduled, Started, Completed, and Failed
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource.\n---\nThis struct is intended for
                    direct use as an array at the field path .status.conditions.  For
                    example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the
                    observations of a foo's current state.\n\t    // Known .status.conditions.type
                    are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    //
                    +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t
                    \   // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
                    \   // other fields\n\t}"
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        ---
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                        useful (see .node.status.conditions), the ability to deconflict is important.
                        The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              job:
                $ref: '#/definitions/k8s.io~1api~1core~1v1~0LocalObjectReference'
                description: The currently active job that is running the Porter Agent.
              observedGeneration:
                description: The last generation observed by the controller.
                format: int64
                type: integer
              phase:
                description: |-
                  The current status of the agent.
                  Possible values are: Unknown, Pending, Running, Succeeded, and Failed.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
