---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.12.1
  name: installations.getporter.org
spec:
  group: getporter.org
  names:
    kind: Installation
    listKind: InstallationList
    plural: installations
    singular: installation
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.name
      name: Porter Name
      type: string
    - jsonPath: .spec.namespace
      name: Porter Namespace
      type: string
    - jsonPath: .status.action.name
      name: Last Action
      type: string
    - jsonPath: .status.phase
      name: Last Status
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1
    schema:
      openAPIV3Schema:
        description: Installation is the Schema for the installations API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: "InstallationSpec defines the desired state of Installation
              \n SERIALIZATION NOTE: * The json serialization is for persisting this
              to Kubernetes. * The yaml serialization is for creating a Porter representation
              of the resource."
            properties:
              agentConfig:
                description: AgentConfig is the name of an AgentConfig to use instead
                  of the AgentConfig defined at the namespace or system level.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              bundle:
                description: Bundle definition for the installation.
                properties:
                  digest:
                    description: Digest is the current digest of the bundle.
                    type: string
                  repository:
                    description: Repository is the OCI repository of the current bundle
                      definition.
                    type: string
                  tag:
                    description: Tag is the OCI tag of the current bundle definition.
                    type: string
                  version:
                    description: Version is the current version of the bundle.
                    type: string
                required:
                - repository
                type: object
              credentialSets:
                description: CredentialSets that should be included when the bundle
                  is reconciled.
                items:
                  type: string
                type: array
              labels:
                additionalProperties:
                  type: string
                description: Labels applied to the installation.
                type: object
              name:
                description: Name is the name of the installation in Porter. Immutable.
                type: string
              namespace:
                description: Namespace (in Porter) where the installation is defined.
                type: string
              parameterSets:
                description: ParameterSets that should be included when the bundle
                  is reconciled.
                items:
                  type: string
                type: array
              parameters:
                description: Parameters specified by the user through overrides. Does
                  not include defaults, or values resolved from parameter sources.
                type: object
                x-kubernetes-preserve-unknown-fields: true
              schemaVersion:
                description: SchemaVersion is the version of the installation state
                  schema.
                type: string
              uninstalled:
                description: Uninstalled specifies if the installation should be uninstalled.
                type: boolean
            required:
            - bundle
            - name
            - namespace
            - schemaVersion
            type: object
          status:
            description: InstallationStatus defines the observed state of Installation
            properties:
              action:
                description: The most recent action executed for the resource
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              conditions:
                description: 'Conditions store a list of states that have been reached.
                  Each condition refers to the status of the ActiveJob Possible conditions
                  are: Scheduled, Started, Completed, and Failed'
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: The last generation observed by the controller.
                format: int64
                type: integer
              phase:
                description: 'The current status of the agent. Possible values are:
                  Unknown, Pending, Running, Succeeded, and Failed.'
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
